<%
if (typeof id === "undefined") var id = formPartialsID("radio");
if (typeof modifiers === "undefined") var modifiers = []; 
if (typeof modifiers === "string") modifiers = [modifiers]; 
let boxCounter = 0;
%>

<div class="form-group check-radio"
  <%- typeof all_toggle !== "undefined" ? `data-all-toggle="${all_toggle}"` : "" %>
  <%- modifiers.includes("hidden") ? "hidden" : "" %>
  id="<%- id %>-container">
  <fieldset
    <%- modifiers.includes("disabled") ? "disabled" : "" %>
  >

    <%- generateLabel({
        id,
        modifiers: modifiers.concat(["legendLabel"]),
        label: typeof label !== "undefined" ? label : null,
        hint: typeof hint !== "undefined" ? hint : null,
        tooltip: typeof tooltip !== "undefined" ? tooltip : null
      }) %>

    <% const boxs = boxes.map(box => {
      boxCounter++;

      if (typeof box === "string") {
        box = {
          text: box,
          baseID: id,
          type: "radio",
          boxID: boxCounter,
          modifiers: []
        }

      } else if (typeof box === "object") {

        box.baseID = id;
        if (typeof box.modifiers === "undefined") box.modifiers = [];

        if (typeof box.id !== "undefined") {
          box.boxID = box.id;
          box.suppliedID = true;
        } else {
          box.boxID = boxCounter;
          box.suppliedID = false;
        }

        box.type = "radio";
      }

      %>

      <%- generateCheckRadio(box).html; %>

      <% 


        let { toggle, rToggle, inject, hintAfterTick, tooltip, tooltipOnHint } = generateCheckRadio(box);
        return {
          toggle,
          rToggle,
          inject,
          hintAfterTick,
          tooltip,
          tooltipOnHint
        }

      });

      %>

  </fieldset>

  <% if ((boxs.filter(box => box.toggle !== undefined || box.tooltipOnHint || box.tooltip !== undefined || box.hintAfterTick || box.rToggle !== undefined || box.inject !== undefined).length > 0) || typeof all_toggle !== "undefined" ) { 
    %>
    <script type="text/javascript">
      $("#<%- id %>-container").change("input[type=radio]", function() {

        $("input[type=radio]:checked", this).each(function() {
          $($(this).data("toggle")).removeAttr("hidden").show();
          $($(this).data("r-toggle")).hide();
          $(this).closest("fieldset").find($(this).data("inject")).remove();
          $($(this).data("inject")).clone().insertAfter($(this).closest(".uiToolKitCheckBox"));
          if ($(this).data("inject-indent") !== false) {
            $($(this).data("inject")).addClass("injected");
          }
          $(this).parent().find(".hidden-hint").show();
          $(this).closest("fieldset").find($($(this).data("inject"))).show();
        });

        $("input[type=radio]:not(:checked)", this).each(function() {
          $($(this).data("toggle")).hide();
          $($(this).data("r-toggle")).show();
          $(this).closest("fieldset").find($(this).data("inject")).remove();
          $(this).parent().find(".hidden-hint").hide();
        });

        $($(this).data("all-toggle")).show();

      })

      $("#<%- id %>-container").on("click", ".tooltip", function(e) {
        e.preventDefault();
      });
    </script>
  <% } %>

</div>