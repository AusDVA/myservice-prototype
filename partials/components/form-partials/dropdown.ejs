<%

if (typeof id === "undefined") var id = formPartialsID("dropdown");
if (typeof modifiers === "undefined") var modifiers = []; 
if (typeof modifiers === "string") modifiers = [modifiers]; 

%>

<div class="form-group <%- locals.class %> " <%- modifiers.includes("hidden") ? "hidden" : "" %> id="<%- id %>-container">
  <%- generateLabel({
      id,
      modifiers,
      label: typeof label !== "undefined" ? label : null,
      hint: typeof hint !== "undefined" ? hint : null,
      tooltip: typeof tooltip !== "undefined" ? tooltip : null
    }) %>

  <select class="uikit-text-input <%- modifiers.includes("inputFullLength") ? "" : "input-half" %>" id="<%- id %>" <%- modifiers.includes("disabled") ? "disabled" : "" %>>

    <% const opts = options.map(opt => {
    if (typeof opt === "string") {
      opt = {
        text: opt
      }
    }
    %>
    <%- generateOption(opt).html; %>

    <% 


      let { toggle, rToggle } = generateOption(opt);
      return {
        toggle: toggle,
        rToggle: rToggle
      }

    });
    %>

  </select>

  <% if (opts.filter(opt => opt.toggle !== undefined || opt.rToggle !== undefined).length > 0) { %>
  <script type="text/javascript">
    $("#<%- id %>").change(function () {

      $("option:selected", this).each(function () {
        $($(this).data("toggle")).show();
        $($(this).data("r-toggle")).hide();
      });

      $("option:not(:selected)", this).each(function () {
        $($(this).data("toggle")).hide();
        $($(this).data("r-toggle")).show();
      });
    })
  </script>
  <% } %>

</div>
