<!DOCTYPE html>
<html class="js" lang="en">

<head>
  <title>Service history</title>
  <% include ../../partials/head.ejs %>
  <style>
    #templates {
      display: none;
    }
  </style>
</head>

<body class="uikit-body uikit-grid uikit-refactor">
  <noscript>
    <p role="alert">This website needs JavaScript to work properly.</p>
  </noscript>
  <nav class="uikit-skip-link">
    <a class="uikit-skip-link__link" href="#main-content">Skip to main content</a>
  </nav>
  <% include ../../partials/header-topbar.ejs %>
  <% include ../../partials/header-claims.ejs %>
  <% include ../../partials/header-nom-rep.ejs %>
  <main>
    <div class="container" id="main-content">
      <h1>
        <span id="title" class="heading">Service operations</span>
      </h1>
      <h2 id="date-range"></h2>
      <div class="row margin-below--extra">
        <div class="col-sm-7">

          <div class="operations">
            <div id="operations-container"></div>

            <button id="add-operation" class="uikit-btn uikit-btn--tertiary">Add another operation</button>

          </div>
        </div>
      </div>
      <div class="pagination">
        <button id="previous" class="uikit-btn uikit-btn--tertiary" onclick="history.back()">Previous</button>
        <button id="cancel" class="uikit-btn uikit-btn--tertiary">Cancel</button>
        <div class="floated">
          <button id="exit" class="uikit-btn uikit-btn--tertiary">Save and exit</button>
          <button id="next" class="uikit-btn">Save and next</button>
        </div>
      </div>
    </div>
  </main>

  <% include ../../partials/footer.ejs %>

  <div id="modal" class="modal-window">
    <div>
      <a href="#modal-close" title="Close" class="modal-close">Close</a>
      <h2>Exit to service details?</h2>
      <p>Changes may not be saved</p>
      <div class="modal-buttons">
        <button id="modal-ok" class="uikit-btn">OK</button>
        <button id="modal-cancel" class="uikit-btn uikit-btn--tertiary cancel">Cancel</button>
      </div>
    </div>
  </div>

  <div id="templates">
    <div id="operation-template" class="operation">

      <div class="form-group">
        <label class="uikit-text-input__label" for="operation-name">Operation name</label>
        <select class="uikit-text-input input-half operation-name" name="operation-name" type="text" value="">
          <option selected>-- Select title --</option>
          <option>Goldfinger</option>
          <option>Moonraker</option>
          <option>Skyfall</option>
        </select>
      </div>

      <div class="form-group">
        <label class="uikit-text-input__label">Field start date
          <span class="hint">(dd / mm / yyyy)</span>
        </label>
        <input class="uikit-text-input dd start-day" type="text" name="start-day" maxlength="2" aria-label="2 digit day"> /
        <input class="uikit-text-input mm start-month" type="text" name="start-month" maxlength="2" aria-label="2 digit month"> /
        <input class="uikit-text-input yyyy start-year" type="text" name="start-year" maxlength="4" aria-label="4 digit year">
      </div>

      <div class="form-group">
        <label class="uikit-text-input__label">Field end date
          <span class="hint">(dd / mm / yyyy)</span>
        </label>
        <input class="uikit-text-input dd end-day" type="text" name="end-day" maxlength="2" aria-label="2 digit day"> /
        <input class="uikit-text-input mm end-month" type="text" name="end-month" maxlength="2" aria-label="2 digit month"> /
        <input class="uikit-text-input yyyy end-year" type="text" name="end-year" maxlength="4" aria-label="4 digit year">
      </div>
      <button class="uikit-btn uikit-btn--tertiary remove">Remove operation</button>
      <hr class="margin-above margin-below--small">
    </div>

  </div>
  </div>

  <script>
    var SERVICE_HISTORY = 'serviceHistory';

    function urlParameter(pName) {
      var name = pName.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]');
      var regex = new RegExp('[\\?&]' + name + '=([^&#]*)');
      var results = regex.exec(window.location.search);
      return results === null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));
    };

    function getServiceHistory() {
      return JSON.parse(localStorage.getItem(SERVICE_HISTORY));
    }

    function setServiceHistory(pData) {
      return localStorage.setItem(SERVICE_HISTORY, JSON.stringify(pData));
    }

    function getElementByClassName(pRootElement, pClassName) {
      return pRootElement.getElementsByClassName(pClassName)[0];
    }

    function setSelect(pElement, pValue) {
      if (pValue) {
        pElement.value = pValue;
      } else {
        pElement.selectedIndex = 0;
      }
    }

    function setInput(pElement, pValue) {
      pElement.value = pValue ? pValue : '';
    }

    function getDate(pDay, pMonth, pYear) {
      var filtered = [pDay, pMonth, pYear].filter(function (pItem) {
        return pItem;
      })
      return filtered.join('/');
    }

    function addOperationElement(pElement, pDestination, pData) {
      if (pData) {
        setSelect(getElementByClassName(pElement, 'operation-name'), pData.name);
        setInput(getElementByClassName(pElement, 'start-day'), pData.startDay);
        setInput(getElementByClassName(pElement, 'start-month'), pData.startMonth);
        setInput(getElementByClassName(pElement, 'start-year'), pData.startYear);
        setInput(getElementByClassName(pElement, 'end-day'), pData.endDay);
        setInput(getElementByClassName(pElement, 'end-month'), pData.endMonth);
        setInput(getElementByClassName(pElement, 'end-year'), pData.endYear);
      }

      getElementByClassName(pElement, 'remove').onclick = function () {
        pElement.parentElement.removeChild(pElement);
      }

      pDestination.appendChild(pElement);
    }

    function renderLayout() {
      var periodIndex = parseInt(urlParameter('period'));
      var serviceHistory = getServiceHistory();
      var period = serviceHistory.periods[periodIndex];
      var operations = period.operations;

      var operationTemplate = document.getElementById('operation-template');
      var operationsContainer = document.getElementById('operations-container');

      if (operations.length) {
        operations.forEach(function (pOperation) {
          var operationElement = operationTemplate.cloneNode(true);
          operationElement.removeAttribute('id');
          addOperationElement(operationElement, operationsContainer, pOperation);
        });
      } else {
        var operationElement = operationTemplate.cloneNode(true);
        operationElement.removeAttribute('id');
        addOperationElement(operationElement, operationsContainer);
      }

      var titleElement = document.getElementById('title');
      titleElement.innerText = period.branch + titleElement.innerText.toLowerCase();

      var startDate = getDate(period.startDay, period.startMonth, period.startYear);
      var endDate = getDate(period.endDay, period.endMonth, period.endYear);

      var filtered = [startDate, endDate].filter(function (pItem) {
        return pItem;
      })
      var dateRange = filtered.join(' â€“ ');
      if (dateRange) {
        document.getElementById('date-range').innerText = dateRange;
      }

    }

    function getInputValues() {
      var operationsContainer = document.getElementById('operations-container');
      var operationElements = operationsContainer.getElementsByClassName('operation');
      return Array.prototype.map.call(operationElements, function (pOperationElement) {
        return {
          name: getElementByClassName(pOperationElement, 'operation-name').value,
          startDay: getElementByClassName(pOperationElement, 'start-day').value,
          startMonth: getElementByClassName(pOperationElement, 'start-month').value,
          startYear: getElementByClassName(pOperationElement, 'start-year').value,
          endDay: getElementByClassName(pOperationElement, 'end-day').value,
          endMonth: getElementByClassName(pOperationElement, 'end-month').value,
          endYear: getElementByClassName(pOperationElement, 'end-year').value
        };
      });
    }

    function setOperations() {
      var periodIndex = parseInt(urlParameter('period'));
      var serviceHistory = getServiceHistory();
      serviceHistory.periods[periodIndex].operations = getInputValues();
      setServiceHistory(serviceHistory);
    }

    document.getElementById('add-operation').onclick = function () {
      var operationElement = document.getElementById('operation-template').cloneNode(true);
      operationElement.removeAttribute('id');
      var operationsContainer = document.getElementById('operations-container');
      addOperationElement(operationElement, operationsContainer);
    };

    document.getElementById('next').onclick = function () {
      setOperations();
      window.location.href = '/service-period-3?period=' + urlParameter('period');
    }

    document.getElementById('exit').onclick = function () {
      setOperations();
      var toastMessage = encodeURIComponent('Service history successfully updated');
      window.location.href = '/profile-history?continue=true&toastType=Success&toastMessage=' + toastMessage;
    }

    document.getElementById('previous').onclick = function () {
      setOperations();
      window.location.href = '/service-period-1?period=' + urlParameter('period');
    }

    document.getElementById('cancel').onclick = function () {
      document.getElementById('modal').classList.add('modal-visible');
    };

    document.getElementById('modal-ok').onclick = function () {
      window.location.href = '/profile-history?continue=true';
    };

    document.getElementById('modal-cancel').onclick = function () {
      document.getElementById('modal').classList.remove('modal-visible');
    };

    renderLayout();
  </script>
</body>

</html>