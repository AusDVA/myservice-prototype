<script type="text/javascript">
	$(document).ready(function() {
		var modalName = "<%= modalName %>";
		var triggerName = "<%= triggerName %>";
		var modalElementPrefix = "<%= modalElementPrefix %>";

		var focusItems = [modalElementPrefix+'CloseBtn', modalElementPrefix+'NoBtn', modalElementPrefix+'YesBtn'];
		var modalIsOpen = (window.location.href.indexOf(modalName) > 0); // UIKIT apparently handles modal-window based on fragment name on URL
		var previousClickableElement = null;

		// Reusable functions for the modal

		function handleGlobalKbd(evt) {
			if (modalIsOpen == true) {
				if (evt.key == 'Escape') {
					handleEscape(evt);
				}
			}
		};

		function handleEscape(evt) {
			$("#"+modalElementPrefix+"CloseBtn").click();
			previousClickableElement.focus();
			$(document).unbind('keydown', handleGlobalKbd);
			evt.stopPropagation();
		}

		function enableModal(evt, previousButton) {
			previousClickableElement = (previousButton == null)
				? $("#"+triggerName)
				: previousButton;

			$("#"+modalName).attr('aria-hidden', false);
			$("#"+modalElementPrefix+"CloseBtn").focus();
			modalIsOpen = true;

			$(document).keydown(handleGlobalKbd);

			if (evt != null) {
				evt.preventDefault();
			}
		}

		// Will return -1 if the currently focused item ID isn't on the focusItems list.
		function getFocusedItemIndex() {
			var curFocusedItem = $(":focus");
			return focusItems.indexOf(curFocusedItem.attr('id'));
		}

		function loopTabWhenOpen(evt) {
			var focusItemIndex = getFocusedItemIndex();

			if (evt.shiftKey) {
				// Back tab
				if (focusItemIndex == 0 || focusItemIndex == -1) {
					$("#" + focusItems[(focusItems.length - 1)]).focus();
					evt.preventDefault();
				}
			} else {
				// Forward tab
				if (focusItemIndex == (focusItems.length - 1) || focusItemIndex == -1) {
					$("#" + focusItems[0]).focus();
					evt.preventDefault();
				}
			}
		}

		// Javascript/jQuery stuff happens below from here.

		$('#'+triggerName).click(enableModal);

		$("#"+modalElementPrefix+"CloseBtn, #"+modalElementPrefix+"NoBtn").click(function(evt) {
			window.location.href = '#';
			previousClickableElement.focus();
			$("#"+modalName).attr('aria-hidden', true);
			modalIsOpen = false;
			evt.preventDefault();
		});

		$("#"+modalName).click(function(evt) {
			$("#"+modalElementPrefix+"CloseBtn").click();
			evt.stopPropagation();
		}).children().click(function(evt) {
			return false;
		});

		$("#"+modalName).keydown(function(evt) {
			switch (evt.key) {
				case "Escape": handleEscape(evt);
					break;
				case "Tab": loopTabWhenOpen(evt);
					break;
				case "Enter":
					$(":focus").click();
					break;
				case "ArrowUp":
				case "ArrowDown":
				case "ArrowLeft":
				case "ArrowRight":
					// in case NVDA or another screen reader goes beyond the loop
					// when hooking arrow input behaviour.
					var focusedItemIndex = getFocusedItemIndex();
					if (focusedItemIndex == -1) {
						$("#"+modalElementPrefix+"CloseBtn").focus();
						evt.stopPropagation();
					}
					break;
			}
		});

		if (modalIsOpen) {
			enableModal(null, $("#"+triggerName));
		}
	});

</script>
