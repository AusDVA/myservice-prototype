<!DOCTYPE html>
<html class="js" lang="en">

<head>

  <title>Style Guide | Form Partials | MyService</title>
  <%- include(partials+"components/styleguide/styleguide-styles-and-scripts") %>
  <style>
    .red {
      color: red;
    }

    .green {
      color: green;
    }
  </style>
</head>

<body class="uikit-body uikit-grid uikit-refactor">

  <%- include(partials+"components/styleguide/styleguide-header") %>

    <main>
      <div class="container" id="main-content">
        <nav class="uikit-breadcrumbs" aria-label="breadcrumb">
          <ul class="uikit-link-list uikit-link-list--inline">
            <li>
              <a href="/styleguide">Home</a>
            </li>
            <li>Form Partials</li>
          </ul>
        </nav>

        <div class="row">
          <div class="col-sm-9">
            <h1>Form Partials</h1>
            <h2>Introduction</h2>
            <p>Form partials give you the ability to create forms in a simple manner. With form partials, desigers and developers can include dynamic content without the use of any javascript, therefore, speeding up the development process.</p>

            <div class="accordion">
              <button class="style-less-button accordion-button"><i class="transition fas fa-chevron-right"></i> Terminology used on this page</button>
              <div class="accordion-content" hidden>  
                <table class="margin-above">
                  <thead>
                    <tr>
                      <th>Term</th>
                      <th>Explanation</th>
                      <th>Example</th>
                    </tr>
                  </thead>
                  <tbody>
                    <span class="hidden">
                      tr>td>pre.language-text>code{}^^td{}+td>pre.language-text>code{}
                    </span>
                    <tr>
                      <td>
                        <pre class="language-text"><code>string</code></pre>
                      </td>
                      <td>Some text surrounded by double quotation marks</td>
                      <td>
                        <pre class="language-text"><code>"Enter your birthday"</code></pre>
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <pre class="language-text"><code>integer</code></pre>
                      </td>
                      <td>A whole number</td>
                      <td>
                        <pre class="language-text"><code>5</code></pre>
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <pre class="language-text"><code>boolean</code></pre>
                      </td>
                      <td>A <code class="green">true</code> or <code class="red">false</code> value</td>
                      <td>
                        <pre class="language-text"><code>false</code></pre>
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <pre class="language-text"><code>array</code></pre>
                      </td>
                      <td>Items contained within a list</td>
                      <td>
                        <pre class="language-text"><code>["Item 1", "Item 2"]</code></pre>
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <pre class="language-text"><code>object</code></pre>
                      </td>
                      <td>A list of key, value pairs</td>
                      <td>
                        <pre class="language-json"><code>
                        {
                          label: "Please enter a reason",
                          hint: "(optional)"
                          rows: 5,
                          disabled: false,
                          modifiers: [
                            "hintNewLine"
                          ]
                        }
                      </code></pre>
                      </td>
                    </tr>
                  </tbody>
                </table>
              </div>
            </div>
            
            <h2>Types of forms:</h2>
            <ul>
              <li class="uikit-link-list"><a href="#checkbox">Checkbox / Radio</a></li>
              <li class="uikit-link-list"><a href="#radioicon">Radio with Icon</a></li>
              <li class="uikit-link-list"><a href="#date">Date</a></li>
              <li class="uikit-link-list"><a href="#dropdown">Dropdown</a></li>
              <li class="uikit-link-list"><a href="#radio">Radio</a></li>
              <li class="uikit-link-list"><a href="#text">Text</a></li>
              <li class="uikit-link-list"><a href="#textarea">Text Area</a></li>
              <li class="uikit-link-list"><a href="#yes_no">Yes/No</a></li>
            </ul>

            <hr>

            <h2>Tooltips</h2>
            <p>Tooltips can be added to any form element (or group). You can do so by adding a <code style="padding: 3px; background: #f5f2f0;">tooltip</code> object like the example below.</p>

            <p><code style="padding: 3px; background: #f5f2f0;">screenreaderText</code> is used to add a short description for screenreader users (or if you specify the below mentioned modifier)</p>
            <p><code style="padding: 3px; background: #f5f2f0;">content</code> is the body of the tooltip. It can accept HTML if needed as well.</p>
 <pre class="language-json"><code>
tooltip: {
  screenreaderText: "Gender help",
  content: "Currently, our system only allows us to record gender as male or female. If neither option is correct inform DVA after your claim is processed."
}</code></pre>

            There is also a modifier available to show extra supporting text (versus only an icon) if your modifiers list contains the string <code style="padding: 3px; background: #f5f2f0;">"tooltipShowText"</code>
            <hr>

            <h2 id="checkbox">Checkbox / Radio</h2>
            <div class="example-box form_elem" data-field="checkbox">
              <h3>Note:</h3>
              <p>Checkboxes and radios share the format and can be change between radio and checkbox by changing the included partial between <code style="padding: 3px; background: #f5f2f0;">components/radio</code> and <code style="background: #f5f2f0; padding: 3px;">components/checkbox</code>.</p>
              <h3>Practical examples</h3>
              <%- include(partials+"components/form-partials/checkbox", {
                label: "Which of the following do you like?",
                hint: "(select all that apply)",
                boxes: [
                  "Ice cream",
                  "Tacos",
                  "Hotdogs",
                  "Pizza"
                ]
              }); %>

              <%- include(partials+"components/form-partials/radio", {
                label: "Which is your favourite?",
                boxes: [
                  "Ice cream",
                  "Tacos",
                  "Hotdogs",
                  "Pizza"
                ]
              }); %>

              <div class="accordion">
                <button class="style-less-button accordion-button margin-below--small"><i class="transition fas fa-chevron-right"></i> Code example</button>
                <div class="accordion-content" hidden>  

                  <pre class="language-ejs">
                    <code>
                      <%%- include(partials+"components/form-partials/checkbox", {
                        label: "Which of the following do you like?",
                        hint: "(select all that apply)",
                        boxes: [
                          "Ice cream",
                          "Tacos",
                          "Hotdogs",
                          "Pizza"
                        ]
                      }); %%>
                    </code>
                  </pre>
                </div>
              </div>
            </div>
            <hr>

            <h2 id="radioicon">Radio with Icons</h2>
            <div class="example-box form_elem" data-field="checkboxicon">
              <h3>Practical example</h3>
              <%- include(partials+"components/form-partials/radio-icon", {
                label: "What are you claiming for?",
                boxes: [
                  {
                    text: "Invalidity service pension",
                    icon: {
                      icon: "fa-user",
                      weight: "fal"
                    }
                  },
                  {
                    text: "Age service pension",
                    icon: {
                      icon: "fa-user",
                      weight: "fal"
                    }
                  }
                ]
              }); %>

              <div class="accordion">
                <button class="style-less-button accordion-button margin-below--small"><i class="transition fas fa-chevron-right"></i> Code example</button>
                <div class="accordion-content" hidden>  

                  <pre class="language-ejs">
                    <code>
                    <%%- include(partials+"components/form-partials/radio-icon", {
                      label: "Choose your favourite social media",
                      boxes: [
                        {
                          text: "Invalidity service pension",
                          icon: {
                            icon: "fa-user",
                            weight: "fal"
                          }
                        },
                        {
                          text: "Age service pension",
                          icon: {
                            icon: "fa-user",
                            weight: "fal"
                          }
                        }
                      ]
                    }); %%>
                    </code>
                  </pre>
                </div>
              </div>
            </div>
            <hr>

            <h2 id="date">Date</h2>
            <div class="example-box form_elem" data-field="date">
              <h3>Practical example</h3>
              <%- include(partials+"components/form-partials/date", {
                label: "Enter your birthday"
              }); %>
            

              <div class="accordion">
                <button class="style-less-button accordion-button margin-below--small"><i class="transition fas fa-chevron-right"></i> Code example</button>
                <div class="accordion-content" hidden>  

                  <pre class="language-ejs">
                    <code>
                      <%%- include(partials+"components/form-partials/date", {
                        label: "Enter your birthday"
                      }); %%>
                    </code>
                  </pre>
                </div>
              </div>
            </div>
            <hr>

            <h2 id="dropdown">Dropdown</h2>
            <div class="example-box form_elem" data-field="dropdown">
              <h3>Practical example</h3>
              <%- include(partials+"components/form-partials/dropdown", {
                label: "Select your title",
                options: [
                  "Mr",
                  "Mrs",
                  "Master",
                  "Miss",
                  "Dr"
                ]
              }); %>
            

              <div class="accordion">
                <button class="style-less-button accordion-button margin-below--small"><i class="transition fas fa-chevron-right"></i> Code example</button>
                <div class="accordion-content" hidden>  

                  <pre class="language-ejs">
                    <code>
                      <%%- include(partials+"components/form-partials/dropdown", {
                        label: "Select your title",
                        options: [
                          "Mr",
                          "Mrs",
                          "Master",
                          "Miss",
                          "Dr"
                        ]
                      }); %%>
                    </code>
                  </pre>
                </div>
              </div>
            </div>
            <hr>

            <h2 id="text">Text</h2>
            <div class="example-box form_elem" data-field="text">
              <h3>Practical example</h3>
              <%- include(partials+"components/form-partials/text", {
                label: "Please enter your name"
              }); %>
            

              <div class="accordion">
                <button class="style-less-button accordion-button margin-below--small"><i class="transition fas fa-chevron-right"></i> Code example</button>
                <div class="accordion-content" hidden>  

                  <pre class="language-ejs">
                    <code>
                      <%%- include(partials+"components/form-partials/text", {
                        label: "Please enter your name"
                      }); %%>
                    </code>
                  </pre>
                </div>
              </div>
            </div>
            <hr>

            <h2 id="textarea">Textarea</h2>
            <div class="example-box form_elem" data-field="textarea">
              <h3>Practical example</h3>
              <%- include(partials+"components/form-partials/textarea", {
                label: "Please enter your name"
              }); %>
            

              <div class="accordion">
                <button class="style-less-button accordion-button margin-below--small"><i class="transition fas fa-chevron-right"></i> Code example</button>
                <div class="accordion-content" hidden>  

                  <pre class="language-ejs">
                    <code>
                      <%%- include(partials+"components/form-partials/textarea", {
                        label: "Please enter a reason"
                      }); %%>
                    </code>
                  </pre>
                </div>
              </div>
            </div>
            <hr>

            <h2 id="yes_no">Yes / No</h2>
            <div class="example-box form_elem" data-field="yes_no">
              <h3>Practical example</h3>
              <%- include(partials+"components/form-partials/yes_no", {
                label: "Do you agree to the terms and conditions?"
              }); %>
            

              <div class="accordion">
                <button class="style-less-button accordion-button margin-below--small"><i class="transition fas fa-chevron-right"></i> Code example</button>
                <div class="accordion-content" hidden>  

                  <pre class="language-ejs">
                    <code>
                      <%%- include(partials+"components/form-partials/yes_no", {
                        label: "Do you agree to the terms and conditions?"
                      }); %%>
                    </code>
                  </pre>
                </div>
              </div>
            </div>
            <hr>

          </div>
          <%- include(partials+"components/styleguide/styleguide-sidenav") %>
        </div>
      </div>
    </main>
    <%- include(partials+"components/styleguide/styleguide-footer") %>
    <script>
      var modGlobal = [
        {
          text: "hintNewLine",
          desc: "Moves the hint to a new line (only if a hint is specified)"
        },
        {
          text: "hidden",
          desc: "Hides the (set) of form elements"
        },
        {
          text: "disabled",
          desc: "Disables the (set of) form elements"
        },
        {
          text: "tooltipShowText",
          desc: "(Only if tooltip specified) Shows extra supporting text for tooltip"
        },
        {
          text: "inputFullLength",
          desc: "Uses the full length variant for form element"
        }
      ];

      var tooltip = {
        property: "tooltip",
        desc: "A button to toggle extended description",
        type: "object",
        req: false
      };

      var hint = {
        property: "hint",
        desc: "Some text to provide some extra information on the question",
        type: "string",
        req: false
      };

      var legend = {
        property: "legend",
        desc: "A \"label\" for the set of fields",
        type: "string",
        req: true
      };

      var legendMod = {
        property: "legend",
        desc: "A \"label\" for the set of fields",
        type: "string",
        req: false
      }

      var label = {
        property: "label",
        desc: "A label for the form element",
        type: "string",
        req: true
      };

      var modifiers = {
        property: "modifiers",
        desc: "A list of pre-determined strings to modify the output",
        type: "array",
        req: false
      };

      var id = {
        property: "id",
        desc: "An optional ID for the form field(s) - use when any Javascript is used",
        type: "string",
        req: false
      }

      var boxes = {
        property: "boxes",
        desc: "A list of either strings or objects to create a list of checkboxes or radios",
        type: "array",
        req: true
      }

      var selector = `<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors" rel="external">CSS Selector</a>`;


      var properties = {
        address: [
          tooltip,
          legendMod,
          modifiers,
          hint,
          id
        ],
        bankdetails: [
          tooltip,
          legendMod,
          modifiers,
          hint,
          id
        ],
        gender: [
          {
            property: "tooltip",
            desc: "A button to toggle an large extend description (gender has default specified tooltip)",
            type: "object",
            req: false
          },
          id,
          modifiers,
          hint,
          {
            property: "label",
            desc: "A label for the form element (defaults to \"Gender\"",
            type: "string",
            req: true
          }
        ],
        checkbox: [
          tooltip,
          label,
          modifiers,
          hint,
          id,
          boxes
        ],
        date: [
          tooltip,
          label,
          modifiers,
          {
            property: "hint",
            desc: "Some text to provide some extra information on the question  (defaults to \"(DD / MM / YYYY)\"",
            type: "string",
            req: false
          },
          id
        ],
        dropdown: [
          tooltip,
          label,
          modifiers,
          hint,
          id,
          {
            property: "options",
            desc: "A list of either strings or objects to create a list of options",
            type: "array",
            req: true
          }
        ],
        text: [
          tooltip,
          legend,
          modifiers,
          hint,
          id
        ],
        textarea: [
          tooltip,
          legend,
          modifiers,
          hint,
          id,
          {
            property: "rows",
            desc: "The number of rows (how tall) the textarea is (defaults to 5)",
            type: "integer",
            req: false
          }
        ],
        yes_no: [
          tooltip,
          legend,
          modifiers,
          hint,
          id,
          {
            property: "yes_toggle",
            desc: `Shows the element with the given ${selector} when "Yes" is checked`,
            type: "string",
            req: false
          },
          {
            property: "no_toggle",
            desc: `Shows the element with the given ${selector} when "No" is checked`,
            type: "string",
            req: false
          },
          {
            property: "yes_rToggle",
            desc: `Shows the element with the given ${selector} when "Yes" is NOT checked`,
            type: "string",
            req: false
          },
          {
            property: "no_rToggle",
            desc: `Shows the element with the given ${selector} when "No" is NOT checked`,
            type: "string",
            req: false
          }
        ],
        checkboxicon: [
          tooltip,
          label,
          modifiers,
          hint,
          id,
          {
            property: "boxes",
            desc: "A list of objects to create a list of checkboxes or radios with icons",
            type: "array",
            req: true
          }
        ]
      };

      var boxesDesc = [
        {
          property: "text",
          desc: "The text that is displayed next to the box",
          type: "string",
          req: true
        },
        {
          property: "hint",
          desc: "Hint text for this specific box",
          type: "string",
          req: false
        },
        {
          property: "toggle",
          desc: `Shows the element with the given ${selector} when this box is checked`,
          type: "string",
          req: false
        },
        {
          property: "rToggle",
          desc: `Shows the element with the given ${selector} when this box is NOT checked`,
          type: "string",
          req: false
        },
        {
          property: "inject",
          desc: `"Injects" (moves to under this box) the element with the given ${selector} when this box is checked`,
          type: "string",
          req: false
        },
        modifiers
      ];

      var boxesIconDesc = [
        {
          property: "text",
          desc: "The text that is displayed next to the box",
          type: "string",
          req: true
        },
        {
          property: "icon",
          desc: "The font awesome icon to display in the box",
          type: "string OR object",
          req: true
        },
        {
          property: "toggle",
          desc: `Shows the element with the given ${selector} when this box is checked`,
          type: "string",
          req: false
        },
        {
          property: "rToggle",
          desc: `Shows the element with the given ${selector} when this box is NOT checked`,
          type: "string",
          req: false
        },
        {
          property: "inject",
          desc: `"Injects" (moves to under this box) the element with the given ${selector} when this box is checked`,
          type: "string",
          req: false
        },
        modifiers
      ];

      var optionsDesc = [
        {
          property: "text",
          desc: "The text that is displayed in the dropdown",
          type: "string",
          req: true
        },
        {
          property: "value",
          desc: "The value attribute for this specific item (use only when extra Javascript is needed)",
          type: "string",
          req: false
        },
        {
          property: "toggle",
          desc: `Shows the element with the given ${selector} when this box is selected`,
          type: "string",
          req: false
        },
        {
          property: "rToggle",
          desc: `Shows the element with the given ${selector} when this box is NOT selected`,
          type: "string",
          req: false
        },
        modifiers
      ];

      $(document).ready(function() {
        $(".form_elem").each(function() {

          var mapArr = arr => {
            var mappedArr = arr.map(elem => {            
              return `
              <tr>
                <td><pre class="language-json">${elem.property}:<code></code></pre></td>
                <td>${elem.desc}</td>
                <td><pre class="language-text"><code>${elem.type}</code></pre></td>
                <td>${elem.req ? "Yes" : "No" }</td>
              </tr>`
            });

            return `
                <table class="margin-above">
                  <thead>
                    <tr>
                      <th>Property</th>
                      <th>Description</th>
                      <th>Data type</th>
                      <th>Required</th>
                    </tr>
                  </thead>
                  <tbody>
                    ${mappedArr.join("")}
                  </tbody>
                </table>
            `

          };

          var mapMods = mods => {
            var mappedMods = mods.map(mod => {
              return `
                <tr>
                  <td><pre class="language-json"><code>"${mod.text}"</code></pre></td>
                  <td>${mod.desc}</td>
                </tr>
              `
            });
            return `
              <table class="margin-above">
                <thead>
                  <tr>
                    <th>Modifier</th>
                    <th>Description</th>
                  </tr>
                </thead>
                <tbody>
                  ${mappedMods.join("")}
                </tbody>
              </table>`


          }

          var optionsPropDesc = `
            <div style="margin-left: 1em;" class="margin-above accordion">
              <button class="style-less-button accordion-button"><i class="transition fas fa-chevron-right"></i> Modifiers</button>
              <div class="accordion-content" hidden>
                          ${mapMods([modGlobal[0], modGlobal[2], modGlobal[3], modGlobal[4]])}
              </div>
            </div>
            <div style="margin-left: 1em;" class="accordion">
              <button class="style-less-button accordion-button"><i class="transition fas fa-chevron-right"></i> Options Specific Properties</button>
              <div class="accordion-content" hidden>

                <p>Dropdowns can take 2 types of data for a box, either a string or an object.</p>

                <p>An example list of options using strings can be seen below:</p>
<pre class="language-json"><code>
options: [
  "Option 1",
  "Option 2",
  "Option 3",
  "Option 4"
]</code></pre>

                <p>An example list of options using objects can be seen below:</p>
<pre class="language-json"><code>
options: [
  {
    text: "Option 1",
    toggle: "#element"
  },
  {
    text: "Option 2",
    rToggle: "#otherElement",
  },
  {
    text: "Option 3",
    hint: "Hello"
  }
]</code></pre>

                    ${mapArr(optionsDesc)}

                    <div style="margin-left: 1em;" class="margin-above accordion">
                      <button class="style-less-button accordion-button"><i class="transition fas fa-chevron-right"></i> Option Specific Modifiers</button>
                        <div class="accordion-content" hidden>
                          ${mapMods([modGlobal[2], {text: "selected", desc: "Sets this box to the default selected box (can only be used once)"}])}
                        </div>
                    </div>
              </div>
            </div>`;

          var checkRadioDesc = `
            <div style="margin-left: 1em;" class="margin-above accordion">
              <button class="style-less-button accordion-button"><i class="transition fas fa-chevron-right"></i> Modifiers</button>
              <div class="accordion-content" hidden>
                ${mapMods([modGlobal[0], modGlobal[2], modGlobal[3]])}
                
              </div>
            </div>
            <div style="margin-left: 1em;" class="accordion margin-above">
              <button class="style-less-button accordion-button"><i class="transition fas fa-chevron-right"></i> Box Specific Properties</button>
              <div class="accordion-content" hidden>

                <p>Checkboxes / radios can take 2 types of data for a box, either a string or an object.</p>

                <p>An example list of boxes using strings can be seen below:</p>
<pre class="language-json"><code>
boxes: [
  "Box 1",
  "Box 2",
  "Box 3",
  "Box 4"
]</code></pre>

                <p>An example list of boxes using objects can be seen below:</p>
<pre class="language-json"><code>
boxes: [
  {
    text: "Box 1",
    toggle: "#element"
  },
  {
    text: "Box 2",
    rToggle: "#otherElement",
  },
  {
    text: "Box 3",
    hint: "Hello"
  },
  {
    text: "Box 4",
    inject: "#anotherElement"
  }
]</code></pre>

                    ${mapArr(boxesDesc)}

                    <div style="margin-left: 1em;" class="accordion">
                      <button class="style-less-button accordion-button"><i class="transition fas fa-chevron-right"></i> Box Specific Modifiers</button>
                        <div class="accordion-content" hidden>
                          ${mapMods([modGlobal[2], modGlobal[3], {text: "checked", desc: "Sets the box checked by default"}])}
                        </div>
                    </div>
              </div>
            </div>`;

          var checkRadioIconDesc = `
            <div style="margin-left: 1em;" class="margin-above accordion">
              <button class="style-less-button accordion-button"><i class="transition fas fa-chevron-right"></i> Modifiers</button>
              <div class="accordion-content" hidden>
                ${mapMods([modGlobal[0], modGlobal[2], modGlobal[3]])}
                
              </div>
            </div>
            <div style="margin-left: 1em;" class="accordion margin-above">
              <button class="style-less-button accordion-button"><i class="transition fas fa-chevron-right"></i> Box Specific Properties</button>
              <div class="accordion-content" hidden>

                <p>Checkboxes / radios with icons use an object data type.</p>

                <p>An example list of boxes using objects can be seen below:</p>
<pre class="language-json"><code>
boxes: [
  {
    text: "Ambulance",
    toggle: "#element",
    icon: "fa-ambulance"
  },
  {
    text: "YouTube",
    rToggle: "#otherElement",
    icon: {
      weight: "fab",
      icon: "fa-youtube"
    },
  },
  {
    text: "Twitter",
    icon: {
      weight: "fab",
      icon: "fa-twitter"
    }
  },
  {
    text: "Anchor",
    inject: "#anotherElement",
    icon: "fa-anchor"
  }
]</code></pre>

                    ${mapArr(boxesIconDesc)}


                    <div style="margin-left: 1em;" class="accordion">
                      <button class="style-less-button accordion-button"><i class="transition fas fa-chevron-right"></i> Icon Formatting</button>
                        <div class="accordion-content" hidden>
                          <p>Icons can be entered in 2 ways: an <code>object</code> or a <code>string</code>. Using an object allows you to specify an icon weight (e.g. "<code>fas</code> for solid, etc), otherwise an standard of "fal" (or light) will be used</p>
                          <h4>String:</h4>
<pre><code>icon: "fa-anchor"</code></pre>
                          <h4>Object:</h4>
<pre>
<code>
icon: {
  icon: "fa-anchor",
  weight: "fas"
}
</code>
</pre>
                        </div>
                    </div>

                    <div style="margin-left: 1em;" class="accordion">
                      <button class="style-less-button accordion-button"><i class="transition fas fa-chevron-right"></i> Box Specific Modifiers</button>
                        <div class="accordion-content" hidden>
                          ${mapMods([modGlobal[2], modGlobal[3], {text: "checked", desc: "Sets the box checked by default"}])}
                        </div>
                    </div>
              </div>
            </div>`;
         
          $(this).append(`
            <div class="accordion properties">
              <button class="style-less-button accordion-button"><i class="transition fas fa-chevron-right"></i> Properties</button>
              <div class="accordion-content" hidden>
                ${mapArr(properties[$(this).data("field")])}
                ${$(this).data("field") === "checkbox" ? checkRadioDesc : ""}
                ${$(this).data("field") === "checkboxicon" ? checkRadioIconDesc : ""}
                ${$(this).data("field") === "dropdown" ? optionsPropDesc : ""}
                ${$(this).data("field") === "date" ? `
                <div style="margin-left: 1em;" class="accordion">
                  <button class="style-less-button accordion-button"><i class="transition fas fa-chevron-right"></i> Modifiers</button>
                    <div class="accordion-content" hidden>
                      ${mapMods([modGlobal[0], modGlobal[3], {text: "noSlashes", desc: "Does not put slashes between date boxes"}, {text: "noDay", desc: "Puts only month and year fields (no day)"}])}
                    </div>
                </div>` : ""}
                ${$(this).data("field") === "text" ? `
                <div style="margin-left: 1em;" class="accordion">
                  <button class="style-less-button accordion-button"><i class="transition fas fa-chevron-right"></i> Modifiers</button>
                    <div class="accordion-content" hidden>
                      ${mapMods([modGlobal[0], modGlobal[2], modGlobal[3], modGlobal[4]])}
                    </div>
                </div>` : ""}
                ${$(this).data("field") === "textarea" || $(this).data("field") === "yes_no" ? `
                <div style="margin-left: 1em;" class="accordion">
                  <button class="style-less-button accordion-button"><i class="transition fas fa-chevron-right"></i> Modifiers</button>
                    <div class="accordion-content" hidden>
                      ${mapMods([modGlobal[0], modGlobal[2], modGlobal[3]])}
                    </div>
                </div>` : ""}
              </div>
            </div>`);
        });


        $(".form_elem").on("click", ".properties .accordion-button", function() {
          if ($(this).hasClass("rotate-90")) {
            $(this).removeClass("rotate-90");
          } else {
            $(this).addClass("rotate-90");
          }

          $(this).parent().find("> .accordion-content").toggle();
        });

      });
    </script>
</body>

</html>