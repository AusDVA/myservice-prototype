<!DOCTYPE html>
<html class="js" lang="en">

<head>
  <title>Style Guide | Getting started | MyService</title>
  <%- include(partials+"components/styleguide/styleguide-styles-and-scripts") %>
</head>

<body class="uikit-body uikit-grid uikit-refactor">
  <%- include(partials+"components/styleguide/styleguide-header") %>
  <main>
    <div class="container" id="main-content">
      <nav class="uikit-breadcrumbs" aria-label="breadcrumb">
        <ul class="uikit-link-list uikit-link-list--inline">
          <li>
            <a href="/styleguide">Home</a>
          </li>
          <li>Getting started</li>
        </ul>
      </nav>
      <div class="row">
        <div class="col-sm-9">
          <h1>Getting started</h1>
          <p>
            The MyService style guide includes the resources required to create consistent user interfaces with the MyService design system principles and best practices.
            The style guide serves as a tool for both designers and developers providing visual and code examples of each component.
          </p>
          <p>The following page displays knowledge that both
            designers and developers should be aware of when starting on MyService.</p>
          <hr>
          <h2>Browser support</h2>
          <p>The following tables outline browser support for MyService.</p>
          <p>Source:
            <a href="https://github.com/AusDTO/gov-au-ui-kit" rel="external">https://github.com/AusDTO/gov-au-ui-kit</a> (refer BROWSER-SUPPORT.md)</p>
          <h4>Mobile browsers</h4>
          <table class="table-responsive">
            <thead>
              <tr>
                <th>Browser</th>
                <th>Platforms</th>
                <th>Minimum version</th>
                <th>Advanced support status</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>Chrome</td>
                <td>Android, iOS</td>
                <td>21</td>
                <td>Tested (Android only)</td>
              </tr>
              <tr>
                <td>Firefox</td>
                <td>Android, iOS</td>
                <td>28</td>
                <td>Untested</td>
              </tr>
              <tr>
                <td>Safari</td>
                <td>iOS</td>
                <td>3.2</td>
                <td>Untested</td>
              </tr>
              <tr>
                <td>Android browser</td>
                <td>Android</td>
                <td>2.1</td>
                <td>Untested</td>
              </tr>
              <tr>
                <td>IE</td>
                <td>Windows Mobile</td>
                <td>10</td>
                <td>Untested</td>
              </tr>
            </tbody>
          </table>

          <h4>Desktop browsers</h4>
          <table class="table-responsive">
            <thead>
              <tr>
                <th>Browser</th>
                <th>Platforms</th>
                <th>Advanced support status</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>Chrome</td>
                <td>Windows, OS X</td>
                <td>Tested </td>
              </tr>
              <tr>
                <td>Firefox</td>
                <td>Windows, OS X</td>
                <td>Tested</td>
              </tr>
              <tr>
                <td>Safari</td>
                <td>OS X</td>
                <td>Tested</td>
              </tr>
              <tr>
                <td>Opera</td>
                <td>Windows, OS X</td>
                <td>Untested</td>
              </tr>
              <tr>
                <td>Yandex</td>
                <td>Windows, OS X</td>
                <td>Untested</td>
              </tr>
              <tr>
                <td>Edge</td>
                <td>Windows</td>
                <td>Tested</td>
              </tr>
              <tr>
                <td>IE 10 and newer</td>
                <td>Windows</td>
                <td>Tested</td>
              </tr>
              <tr>
                <td>IE 9 and older</td>
                <td>Windows</td>
                <td>Tested - functional support only</td>
              </tr>
            </tbody>
          </table>
          <p>All browsers listed are latest stable release, except Internet Explorer.</p>

          <p>The kit uses a conditional styling mixin for specific versions of IE. This has been used by MyService when extending
            the kit.</p>

          <hr>
          <h2>Prototyping</h2>
          <ol>
            <li>Install <b>a Git client</b> such as <a href="https://desktop.github.com" rel="External" target="_blank">GitHub Desktop</a>, <a href="https://tortoisegit.org"
                rel="external" target="_blank">TortoiseGit</a>, or <a href="https://www.sourcetreeapp.com" rel="external" target="_blank">Sourcetree</a></li>
            <li>Using your Git client, <b>clone</b> the MyService prototype GitHub repository at <a href="https://github.com/AusDVA/myservice-prototype" rel="external"
                target="_blank">https://github.com/AusDVA/myservice-prototype</a>. This process will create a local copy of the GitHub repository. <br><b>Note:</b> You will need to
              get access to the repository from the administrator.</li>
            <li>Install <b>node.js</b> on your local machine. <a href="https://nodejs.org/en/" rel="external" target="_blank">Instructions here</a>.</li>
            <li>Using a command line tool (eg. Windows Command Prompt or Terminal), navigate to the local directory cloned in step 1 (eg. <code>
                <font color="Red">cd documents</font>
              </code>) and install <b>gulp-cli</b> on your local machine by running the command <font color="red"><code>npm&nbsp;install --global gulp-cli</code></font>. <a
                href="https://www.npmjs.com/package/gulp-cli/tutorial" rel="external" target="_blank">More in-depth instructions here</a>. <br><b>Note:</b> Mac users you may need
              to run the command as <code>
                <font color="Red">sudo</font>
              </code>.</li>
            <li>Still using a command line tool and in the same directory, run <code>
                <font color="red">npm install</font>
              </code>, then run <code>
                <font color="red">gulp serve</font>
              </code></li>
            <li>Using a browser, visit <a href="http://localhost:5000/" target="_blank"><b>http://localhost:5000/</b></a>. The page should appear <A
                href="https://myservice-disco.herokuapp.com" rel="external" target="_blank">as it does here</A>, if it doesn't then build the stylesheets by running <code>
                <font color="red">npm run build</font>
              </code>.</li>
          </ol>

          <hr>

          <h2>Making changes to the prototype</h2>
          <ol>
            <li>Using your Git client, create a new <b>branch</b> to make adjustments to the MyService prototype.</li>
            <li>Navigate to the local repository and edit the HTML or SASS files using a HTML/CSS editor.<br><b>Note:</b> Do not make changes to .css files, as these are
              automatically generated and any changes will be over-written the moment any subsequent HTML or SASS file is saved.</li>
            <li>When changes are complete, use your Git client to:
              <ol>
                <li>do a <b>pull</b> request from 'Master'; then</li>
                <li><b>commit</b> the changes; and</li>
                <li><b>push</b> to the remote version of your branch in GitHub.</li>
              </ol>
            </li>
            <li>Get in touch with the MyService lead developer and ask they <b>merge</b> the branch into the master MyService prototype repository. Once merged, changes will be
              visible.</li>
          </ol>
          <p><b>Note:</b> In step 3, completing a pull request from 'Master' <i>before</i> commiting and pushing your changes will ensure there are no conflicts when the branch is
            finally merged into 'Master' as part of step 4.</p>

          <hr>

          <h2>Publishing workflow</h2>

          <p>The MyService prototype is publicly available thanks to Herokuapp. Custom URLs can be setup for specific branches should you need to showcase a particular prototype
            without merging into 'Master'. Get in touch with the MyService lead developer to arrange this.</p>

          <hr>
          <h2>MyService SASS files</h2>
          <p>The files below are listed in the same order they are compiled when referencing
            <strong>main.scss</strong>.</p>
          <table>
            <thead>
              <tr>
                <th class="sass-name">Name</th>
                <th class="sass-description">Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <th class="subheading" colspan="2">1. Base (UI Kit 2.0)</th>
              </tr>
              <tr>
                <td>uikit</td>
                <td>This file includes all the components set for inclusion from UIKit2.0. While MyService is not using Pancake to manage
                  UIKit inclusions, uikit.scss should not be edited.</td>
              </tr>
              <tr>
                <th class="subheading" colspan="2">2. Utilities (variables and reusables)</th>
              </tr>
              <tr>
                <td>myservice-variables</td>
                <td>Variables are for defining specific colour values and responsive break points for MyService. Break points are based
                  on unique content requirements for MyService.</td>
              </tr>
              <tr>
                <th class="subheading" colspan="2">3. Components (micro layout files such as buttons and navigation)</th>
              </tr>
              <tr>
                <td>myservice-forms</td>
                <td>Primary for styling form elements (buttons, fields, legends, radio buttons and checkboxes). Also contains classes
                  for specific styling such as the width of DD MM YYYY input fields.</td>
              </tr>
              <tr>
                <td>myservice-user-feedback</td>
                <td>User feedback includes any messages that are presented to the user to provide contextual information. For example:
                  system outage messages, validation feedback or notifications that communicate a change in state.</td>
              </tr>
              <tr>
                <td>myservice-components</td>
                <td>Components are small re-usable utility classes that can be used to extend or override existing elements. For example:
                  floats, clearfix, claim flow help button and visually hidden classes for screen readers.</td>
              </tr>
              <tr>
                <td>myservice-navigation</td>
                <td>Navigation includes primary navigation (home, profile) and secondary navigation (navigating through various profile
                  pages). It also includes any anchor link navigation controls for navigating within a single screen (example: back
                  to top).</td>
              </tr>
              <tr>
                <td>myservice-typography</td>
                <td>Most typographic styling is inherited from UIKit. This SASS file is aimed more toward responsive font sizing and
                  table styling.</td>
              </tr>
              <tr>
                <td>myservice-sliding-panel-side</td>
                <td>The sliding panel side animates from the right side of the screen when triggered by a button. Examples: Log in panel
                  and feedback panel.</td>
              </tr>
              <tr>
                <td>myservice-sliding-panel-top</td>
                <td>The sliding panel top animates from the top of the screen when triggered by the 24hr support link located in the
                  header.</td>
              </tr>
              <tr>
                <td>myservice-autocomplete</td>
                <td>Controls typeahead styling. This is the list of suggestions that appear for selection when typing the first few
                  characters into a text field. Example: select diagnosis.</td>
              </tr>
              <tr>
                <td>myservice-star-rating</td>
                <td>The star rating component is presented to users on the final claim screen. It allows them to select a star. If they
                  select a star an optional text feedback field is rendered with a submit button.</td>
              </tr>
              <tr>
                <td>myservice-modal</td>
                <td>The
                  <a href="/styleguide/modals">modal</a> should only be used sparingly when the user is requested to confirm an action that will change or delete
                  data from their account. Example: Present a modal when confirming the deletion of an incomplete claim.</td>
              </tr>
              <tr>
                <td>myservice-waiting</td>
                <td>This controls layout of an animated icon to be displayed to indicate the change to a state of the page is still
                  being processed. Example: Displays immediately after a claim is submitted then disappears once the "claim submitted"
                  toast message displays.</td>
              </tr>
              <tr>
                <td>myservice-widgets</td>
                <td>Styling of feature boxes, mostly on authenticated home page. Each widget must contain a heading with identifying
                  icon.</td>
              </tr>
              <tr>
                <th class="subheading" colspan="2">4. Layout (macro layout files such as header and footer)</th>
              </tr>
              <tr>
                <td>myservice-header</td>
                <td>This SASS file controls the layout of all headers and responsive handling of primary navigation while it still exists
                  in the header. Examples: unathenticated header, authenticated dashboard header and reduced height headers for claim
                  and registration flows.</td>
              </tr>
              <tr>
                <td>myservice-footer</td>
                <td>Footer controls the gov crest logo and legal content links within the footer of most pages.</td>
              </tr>
              <tr>
                <th class="subheading" colspan="2">5. Pages (unique styling for specific pages)</th>
              </tr>
              <tr>
                <td>myservice-pages-home</td>
                <td>This SASS file is used to control layout that is unique to the unathenticated home page. Example: large feature
                  with background image, 1, 2, 3 steps and introductory content.</td>
              </tr>
              <tr>
                <td>myservice-pages-dashboard</td>
                <td>This SASS file controls any unique styling that apply to the authenticated dashboard. Most of the styling for this
                  page is controlled in myservice-widgets.</td>
              </tr>
              <tr>
                <td>myservice-pages-flows</td>
                <td>This is for stlying components within registration and claim flow that are only used once. If styling components
                  are re-used they should be moved to myservice-components.</td>
              </tr>
              <tr>
                <td>myservice-print</td>
                <td>Print styling is mostly for hiding elements that are not required in printed form.</td>
              </tr>
            </tbody>
          </table>
          <hr>
          <h2>Grid system</h2>
          <p>The UI-Kit grid system is based on a 12 column layout and uses a series of containers, rows, and columns to layout
            and align content. The following table shows how the MyService grid system works across multiple devices.</p>
          <table class="table">
            <thead>
              <tr>
                <td></td>
                <td>
                  <h4>Extra small</h4>
                </td>
                <td>
                  <h4>Small</h4>
                </td>
                <td>
                  <h4>Medium</h4>
                </td>
                <td>
                  <h4>Large</h4>
                </td>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>
                  <b>Max container width</b>
                </td>
                <td>576px</td>
                <td>768px</td>
                <td>992px</td>
                <td>1200px</td>
              </tr>
              <tr>
                <td>
                  <b>Class prefix</b>
                </td>
                <td>col-xs-</td>
                <td>col-sm-</td>
                <td>col-md-</td>
                <td>col-lg-</td>
              </tr>
            </tbody>
          </table>

          <p>To see how the grid comes together, see the
            <a href="https://uikit.service.gov.au/packages/grid-12/tests/site/" rel="external" target="_blank">UI-Kit grid-12 example page</a>.</p>

          <hr>

          <h2>Responsive breakpoints</h2>
          <p>MyService is developed to be mobile first. It uses a handful of media queries from UI-Kit to create sensible breakpoints
            for layouts and interfaces. These breakpoints are based on minimum viewport widths and allow elements to scale up
            as the viewport changes.</p>

          <p>MyService uses four media query ranges for optimising layouts and styling content:</p>

          <div class="example-box">
            <code>
              // Small handheld (mobile phones, 480px and up)
              <br> @media only screen and (max-width: $small-handheld) { ... }
              <br>
              <br> // Medium handheld ('plus' size mobile phones, 650px and up)
              <br> @media only screen and (max-width: $medium-handheld) { ... }
              <br>
              <br> // Large handheld (small tablets, 768px and up)
              <br> @media only screen and (max-width: $large-handheld) { ... }
              <br>
              <br> // Medium tablet (large tablets, ipads, 960px and up)
              <br> @media only screen and (max-width: $medium-tablet) { ... }
              <br>
            </code>
          </div>

          <hr>
        </div>
        <%- include(partials+"components/styleguide/styleguide-sidenav") %>
      </div>
    </div>
  </main>
  <%- include(partials+"components/styleguide/styleguide-footer") %>
</body>

</html>
