///
/// Primary for styling form elements (buttons, fields, legends, radio buttons and checkboxes).
/// Also contains classes for specific styling such as the width of DD MM YYYY input fields.
///

// Button styling
.uikit-body {
  background: $white !important;

  .uikit-btn {
    background-color: $blue;
    border: 1px solid $blue;
    color: $white;

    // Not sure the idea here. It causes alignment issues in http://localhost:5000/auth.
    // Probably not a good idea to do this to every button
    // margin-top: .5rem;
    span {
      border-bottom: 0;
    }

    &:focus,
    &:hover {
      background-color: $blue-dark;
    }

    &:disabled {
      background-color: $gray-light !important;
      border: 1px solid $gray-mid;
      color: $gray;

      &:focus,
      &:hover {
        background-color: $gray-light;
        cursor: not-allowed;
      }
    }

    &.show-password,
    &.send-code {
      border: 0;
      border-bottom: solid 1px $uikit-colour-Primary;
      border-radius: 0;
      display: block;
      font-weight: normal;
      line-height: 1;
      padding: 2px;

      &:focus,
      &:hover {
        background-color: $uikit-colour-Link;
        border-color: transparent;
        color: $uikit-colour-Text;
      }
    }
  }

  .uikit-btn__middle-image {
    border: 0;
    padding-left: 3px;
    width: 16px;
  }

  .uikit-btn__highlight-text {
    color: $blue;
  }

  .uikit-btn--tertiary {
    background-color: $white;
    border: 1px solid $blue;
    color: $uikit-colour-Text;

    &:focus,
    &:hover {
      color: $white;

      .uikit-btn__highlight-text {
        color: $white;
      }

      span {
        color: $white;
      }
    }

    span {
      margin: 0;
    }
  }

  .reversed {
    background-color: $blue;
    border: 1px solid $white;
    color: $white;
  }

  .uikit-btn--secondary {
    background-color: $green;
    border: 1px solid $green;

    &:focus,
    &:hover {
      background-color: $green-dark;
    }
  }

  .uikit-btn--mygov {
    background-color: $green-mygov;
    border: 1px solid $green-mygov;

    &:focus,
    &:hover {
      background-color: $green-mygov--hover;
    }
  }

  .uikit-btn--full-on-small {
    @media screen and (min-width: $AU-media-sm) {
      // display: inline-block;
      width: auto;
    }

    width: 100%;


  }

  // Styling for Borderless button eg. Cancel button used across Add Cover pages
  .uikit-btn--borderless {
    background-color: $white;
    border: 0;
    border-bottom: solid 1px $uikit-colour-Primary;
    border-radius: 0;
    color: $uikit-colour-Text;
    font-weight: normal;
    padding: 0;

    &:focus,
    &:hover {
      background-color: $uikit-colour-Link;
    }
  }

  hr {
    border-top-color: $gray-mild;
  }

  .panel-margin {
    margin-bottom: 2em;
  }
}

.small {
  font-size: 1rem;
  font-weight: normal;
  padding: 0.5em 0.8em;
}

.warning {
  border-color: #f00 !important;
  color: #f00 !important;

  &:focus,
  &:hover {
    background-color: #f00 !important;
    border-color: #f00 !important;
    color: $white !important;
  }
}

// Container for navigation buttons at bottom of screen

.pagination {
  border-top: 1px solid $gray-mild;
  clear: both;
  margin: 2em 0;
  padding-top: 2em;
  text-align: left;

  // Remove bolding from selected radios
  // a) this doesn't work, b) it's a bad idea. 
  // label {
  //   font-weight: normal !important;
  // }

  @media only screen and (min-width: $small-handheld) {
    .uikit-btn {
      padding: 0.8em 0.6em !important;
    }

    .uikit-btn--borderless {
      padding: 0 !important;
    }
  }

  @media only screen and (min-width: $medium-handheld) {
    .uikit-btn {
      padding: 0.8em 1.2em !important;
    }

    .uikit-btn--borderless {
      padding: 0 !important;
    }
  }
}

// sorry for the max-width here, but this is really only for mobile.
@media only screen and (max-width: $uikit-media-sm) {
  .pagination {
    .uikit-btn {
      margin-bottom: 0.5rem;
    }
  }

  .pagination--ss-reverse-order {
    display: flex;
    flex-flow: column-reverse;

    .floated {
      &:not(button) {
        display: flex;
        flex-flow: column-reverse;
      }
    }
  }
}

#optional-fields-message {
  margin: -1.5em 0 2em;

  +p.sub-fields-message {
    margin-bottom: 0;
  }
}

.sub-fields-message {
  font-style: italic;
  margin-top: 0;
  padding-top: 0;
}

.no-left-margin {
  margin-left: 0 !important;
}

// Styling for waiting buttons - e.g. to disable navigation buttons in the cover screens when waiting for a server response
@keyframes spintranslate {
  from {
    transform: translate(-50%, -50%) rotate(0deg);
  }

  to {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

.uikit-btn--waiting {
  position: relative;

  &.uikit-btn--borderless {
    border-bottom: 0;
  }

  span {
    visibility: hidden;
  }

  img {
    animation: spintranslate linear 1s infinite;
    height: 1.5em;
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
  }
}

.hint {
  font-size: 1rem;
  font-weight: normal;
  margin: 2px 0 15px;
}

// For embedding the show password button within password field

@media only screen and (min-width: $small-handheld) {

  .show-password,
  .send-code {
    display: inline-block !important;
    margin-left: -5em;
  }

  .send-code {
    margin-left: -7em;
  }
}

// Gap between each label and input pair
.form-group {
  clear: both;
  margin: $form-margin;
  position: relative;
  ;
}

.form-group--secondary {
  margin-left: 2.5em;
}

.form-group--right-aligned {
  text-align: right;
}

// Input styling

input,
select,
textarea {
  font-size: 1.1rem;
  line-height: 1.5;
  padding: 0.5em 0.4em;

  &:hover,
  &:focus {
    box-shadow: 0 0 8px 1px $rgba-black-20;
  }
}

// conforming button styles
input[type="button"],
input[type="submit"],
input[type="reset"] {
  line-height: initial;
}

input[type="text"],
input[type="name"],
input[type="date"],
input[type="tel"],
input[type="email"],
input[type="number"],
input[type="phone"],
input[type="password"],
input[type="url"],
input[type="search"],
textarea,
select,
.typeahead {
  border: 1px solid $gray-mild !important; // codesmell; why is this important?
  border-radius: $uikit-border-radius;
  box-sizing: border-box;
  color: $gray;
  margin: 0 1em 0.4em 0; // now zero top margin to come in line with DTA
  max-width: 42em;
  padding: 0.6em 0.4em;
  // width: 90%;
  width: 100%;


  &:focus,
  &:hover {
    background-color: $white !important;
    border: 1px solid $gray !important;
    outline: none !important;
  }

  &:disabled {
    background-color: $gray-light !important;
    border: 1px solid $gray-mid;
    color: $gray;
    cursor: not-allowed;

    &:focus,
    &:hover {
      border: 1px solid $gray-light !important;
      box-shadow: none;
    }
  }
}

.input-support-text {
  font-size: 1.4em;
  position: relative;
  top: 0.1em;
}

.input-support-text--middle {
  font-size: initial;
  padding-left: 1em;
  padding-right: 1em;
}

.input-support-text--after {
  margin-left: -0.6em;
}

select {
  &.uikit-text-input {
    height: 45px;
  }
}

// start jQuery override
// Controls typeahead text filter. Remove later.
.custom-combobox {
  display: inline;
  position: relative;
}

.custom-combobox-toggle {
  margin-left: -1px;
  padding: 0;
}

.custom-combobox-input {
  margin: $margin-zero;
  padding: 5px 10px;
}

.ui-tooltip {
  display: inline-block;
  margin: $margin-zero;
  padding: 0.75em 1.5em;
}

.ui-state-highlight {
  // TODO:: Remove. It's not used in the repo
  background-color: $orange-light;
}

.ui-helper-hidden-accessible {
  // TODO:: Remove. It's not used in the repo
  display: none;
}

// end jQuery override

@include uikit-media(xs) {

  input,
  select,
  textarea {

    &.input-half,
    &[type="phone"] {
      max-width: 22em;
      width: 45%;
    }

    &.input-auto {
      width: auto;
    }
  }



  input {
    &.input-small {
      max-width: 10em;
      width: 25%;
    }

    &[type='search'] {
      // Ensure input type=search has consistent sizing with input type=text
      appearance: searchfield;
      box-sizing: content-box;
    }

    // Remove the up/down arrows on HTML5 number fields
    &[type='number']::-webkit-inner-spin-button,
    &[type='number']::-webkit-outer-spin-button {
      appearance: none;
      margin: $margin-zero;
    }

    &[type="number"] {
      appearance: textfield;
    }
  }
}

input,
select,
textarea {

  &.input-half,
  &[type='phone'] {
    width: 90%;
  }
}

input {
  &.input-small {
    width: 50%;
  }
}

fieldset {
  border: 0;
  clear: both;
  margin: 0 0 1em;
  padding: 0;
}

legend,
caption {
  border: 0;
  font-size: 1.5rem;
  font-weight: normal;
  line-height: 1.4em;
  max-width: $uikit-maxwidth;
  padding: 0;
  text-align: left;
}

label {
  font-weight: bold;
}

// Style legends to appear like labels
.legend-label {
  display: inline-block;
  font-size: 1rem;
  font-weight: bold;
  margin-bottom: 0.8em;
  width: 100%;
}

.legend-h3 {
  font-size: 1.17rem;
  font-weight: bold;
  margin-bottom: 0.8em;
}

.legend-label--light {
  font-size: 1rem;
  font-weight: normal;
  margin-bottom: 0.8em;

  .hint {
    color: $gray-mid;
    font-size: 0.9em;
  }
}

.display-block {
  display: block;
}

.display-inline {
  display: inline;
}

.display-inline-block {
  display: inline-block;
}

.breakout {
  background: $gray-light;
  margin: 0 0 30px;
  padding: 2.5em 2em 1em 2em;

  &::after {
    clear: both;
    content: $content-blank;
    display: block;
    height: 0;
    visibility: hidden;
  }

  .hint {
    display: block;
    font-size: 0.7em;
    margin: 10px 0 0;

    a {
      white-space: nowrap;
    }
  }
}

.uikit-text-input__label-wrapper--inline-block {
  display: inline-block;
}

// Space between radio buttons
.uikit-control-input__radio {
  margin: 0.75em 0;
}

// Size of radio and checkbox span labels
.uikit-control-input__text {
  display: block;
  font-size: 1rem;
  font-weight: normal;
  margin: 0;
  padding: 0 0.5rem 0.5rem 2.5rem;
}

// Width of select boxes for drop downs that appear within a sentence eg. Add cover - Diagnosis
.uikit-text-input__dropdowns {

  // TODO:: Remove. It's not used in the repo
  select {
    display: block;
    width: 210px;
  }
}

.breakout-compact {
  background: $gray-light;
  margin: 0 0 30px;
  max-width: $uikit-maxwidth;
  padding: 2em 2em 0.1em;

  .hint {
    display: block;
    font-size: 0.7em;
    margin: 10px 0 0;

    a {
      white-space: nowrap;
    }
  }
}

.id-marriage,
.id-changename {
  margin-top: 2em;
}

// input widths
.dd,
.mm,
.yyyy,
.bsb {
  display: inline;
  margin-right: 0 !important;
  width: 2em !important;
}

.yyyy {
  width: 4em !important;
}

.bsb {
  width: 3em !important;
}

// Autocomplete styling

.ui-widget-content {
  background: $white;
  border: 1px solid $gray-mild;
  color: $uikit-colour-Text;
}

.ui-menu {
  display: block;
  list-style: none;
  margin: $margin-zero;
  outline: 0;
  padding: 0;
}

.ui-autocomplete {
  cursor: default;
  left: 0;
  position: absolute;
  top: 0;
}

.ui-menu-item {
  &:hover {
    background-color: $blue;
    color: $white;
  }
}

.ui-front {
  z-index: 100;
}

// A form call out reverses the colour contrast to ensure important functionality is highlighted

.form-callout {
  background-color: $blue-light;
  color: $black;
  padding: 0.5em 1em;

  button {
    border: 1px solid $white;
  }
}

.display-none {
  display: none !important; // used as brute force so only removal of class can override
}

@media only screen and (min-width: $medium-handheld) {
  .uikit-text-input__dropdowns {

    // TODO:: Remove. It's not used in the repo
    select {
      display: inline;

      // width: 210px; // width doesn't work for inline elements
    }
  }
}

.flex-row {
  display: flex;
  flex-flow: row wrap;
  justify-content: space-between;
}

// Radio button tiles
.radio-tile--group {
  display: flex;
  //margin: 1em 0 0;

  label {


    display: block;
    margin: 0 1em 1em 0;
    min-width: 170px;
    position: relative;
    text-align: center;

    &:hover {
      background-color: $gray-light;
      cursor: pointer;
    }

    img {
      display: block;
      height: 60px;
      margin-left: auto;
      margin-right: auto;
      width: 60px;
    }
  }


  span {
    border: 1px solid $gray-mild;
    border-radius: $uikit-border-radius;
    display: block;
    height: 100%;
    padding: 1em;
  }


  input {
    &[type='radio'] {

      &:checked+span,
      &:focus+span {
        background: $gray-light url("../images/ico-tick-blue-solid.svg") no-repeat;
        background-position: right 10px top 10px;
        background-size: 30px 30px;
        border: 1px solid $green;
        border-radius: $uikit-border-radius;
        height: 100%;
      }
    }
  }
}

.radio-tile {

  // I know this isn't BEM but the angular devs couldn't get .radio-tile__icon to work with this component 
  .radio_tile__icon {
    display: block;
    padding: .4em;
  }
}



.radio-tile-group--four,
.radio-tile-group--three {
  &.radio-tile--group {
    display: block;
  }
}

@include uikit-media(md) {

  .radio-tile-group--four,
  .radio-tile-group--three {
    &.radio-tile--group {
      display: flex;

      label {
        flex: 1;

        &:last-child {
          margin-right: 0;
        }
      }
    }
  }
}



.radio-tile-group--equal-width-height {
  .radio-tile {
    icon {
      // display: block;
      // padding: .4em;
    }

    span {
      min-width: 220px;
    }

    p {
      font-weight: normal;
    }

  }
}

.radio-tile--medium {
  span {
    max-width: 320px;
  }
}


.file-upload__input,
.file-upload-default__input {
  display: none;
  height: 0.1px;
  overflow: hidden;
  position: absolute;
  width: 0.1px;
  z-index: -1;

  &+label {
    cursor: pointer;
    font-weight: normal;
    line-height: normal;
    white-space: nowrap;
  }

}

.file-upload__label {
  .uikit-btn--tertiary {
    margin-left: uikit-space(0.75);
  }
}

.uikit-body {
  .uiToolKitCheckBox {
    margin-bottom: 1em;
    margin-right: 1em;
  }
}


.select-container {
  display: inline;
  position: relative;

  label {
    font-weight: normal;
  }

  select {
    appearance: none;
    background: $white;
    border: 0;
    border-radius: $uikit-border-radius;
    font-size: 1em;
    font-weight: bold;
    padding: 0.8em 1.2em;
    width: 100%;

    &::-ms-expand {
      display: none;
    }
  }

  &::after {
    border-left: 5px solid transparent;
    border-right: 5px solid transparent;
    border-top: 8px solid $black;
    content: $content-blank;
    height: 0;
    opacity: 0.5;
    pointer-events: none;
    position: absolute;
    right: 2em;
    top: 0.3em;
    width: 0;
  }
}


.mys-dropdown {
  position: relative;

  &::after {
    border-left: 5px solid transparent;
    border-right: 5px solid transparent;
    border-top: 8px solid $black;
    content: $content-blank;
    height: 0;
    opacity: 0.5;
    pointer-events: none;
    position: absolute;
    right: 1.7em;
    top: 0.3em;
    width: 0;
  }
}

.mys-dropdown__select {
  appearance: none;
  background: $white;
  border: 0;
  border-radius: $uikit-border-radius;
  font-size: 1em;
  font-weight: bold;
  padding: 0.5em 3em 0.5em 0.8em;
  width: auto;

  &::-ms-expand {
    display: none;
  }
}

// natural language form elements

.mys-label-nl {
  font-size: 1.3em;
  font-weight: normal;
}

.mys-dropdown-nl {
  &::after {
    right: 2.2em;
  }

  .mys-dropdown__select {
    color: $blue;
    font-size: 1.3em;
    font-weight: normal;
  }
}

//margin between buttons/formgroup
.feedback-margin {
  padding-bottom: 20px;
}

.sign-dollar {
  font-size: 1.2em;
}



.pipe {
  margin-left: 15px;
}